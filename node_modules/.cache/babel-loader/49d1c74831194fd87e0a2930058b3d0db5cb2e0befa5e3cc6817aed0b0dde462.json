{"ast":null,"code":"var _jsxFileName = \"/Users/marc/Desktop/Projects/react-task-tracker/src/components/Tasks.js\";\nimport { useState } from 'react';\nimport Task from './Task'; // importing the Task component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = ({\n  tasks,\n  onDelete\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onDelete: onDelete\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this) //Using the Task component (Passing values and functions through props again)\n    )\n  }, void 0, false);\n};\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","Task","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","tasks","onDelete","children","map","task","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/marc/Desktop/Projects/react-task-tracker/src/components/Tasks.js"],"sourcesContent":["import { useState } from 'react'\nimport Task from './Task' // importing the Task component\n\nconst Tasks = ({ tasks, onDelete}) => {\n    return (\n      <>\n        {tasks.map((task) => (\n          <Task key={task.id} task={task} onDelete={onDelete}/> //Using the Task component (Passing values and functions through props again)\n        ))}\n      </>\n    )\n  }\n  \n\nexport default Tasks\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ,EAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAClC,oBACEL,OAAA,CAAAE,SAAA;IAAAI,QAAA,EACGF,KAAK,CAACG,GAAG,CAAEC,IAAI,iBACdR,OAAA,CAACF,IAAI;MAAeU,IAAI,EAAEA,IAAK;MAACH,QAAQ,EAAEA;IAAS,GAAxCG,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkC,CAAC,CAAC;IACvD;EAAC,gBACF,CAAC;AAEP,CAAC;AAAAC,EAAA,GARGX,KAAK;AAWX,eAAeA,KAAK;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}