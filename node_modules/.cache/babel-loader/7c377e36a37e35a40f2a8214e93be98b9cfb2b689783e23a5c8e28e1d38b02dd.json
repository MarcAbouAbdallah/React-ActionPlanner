{"ast":null,"code":"var _jsxFileName = \"/Users/marc/Desktop/Projects/react-task-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Header from './components/Header.js';\nimport Tasks from './components/Tasks';\n\n// Root component that contains all other components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // States are stored in the top component (to use them everywhere) and passed to components through props (Can also use other state management tools like Redux, Context API...)\n  const [tasks, setTasks] = useState([]);\n\n  // Delete Task (a function passed to Tasks component)\n  const deleteTask = id => {\n    //This is how to manipulate states (immutable)\n    setTasks(tasks.filter(task => task.id !== id)); //Change the state to show all tasks exepct the one with the given id\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 27\n    }, this) : 'No tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","Tasks","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","deleteTask","id","filter","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onDelete","_c","$RefreshReg$"],"sources":["/Users/marc/Desktop/Projects/react-task-tracker/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport Header from './components/Header.js'\nimport Tasks from './components/Tasks'\n\n// Root component that contains all other components\nfunction App() {\n\n  // States are stored in the top component (to use them everywhere) and passed to components through props (Can also use other state management tools like Redux, Context API...)\n  const [tasks, setTasks] = useState([])\n\n\n  // Delete Task (a function passed to Tasks component)\n  const deleteTask = (id) => {\n    //This is how to manipulate states (immutable)\n    setTasks(tasks.filter((task) => task.id !== id)) //Change the state to show all tasks exepct the one with the given id\n  }\n\n  return (\n    <div className=\"container\">\n      <Header />\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} /> : 'No tasks to show'}\n    </div>\n  )\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,oBAAoB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAGtC;EACA,MAAMS,UAAU,GAAIC,EAAE,IAAK;IACzB;IACAF,QAAQ,CAACD,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC,EAAC;EACnD,CAAC;EAED,oBACEN,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBV,OAAA,CAACH,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACTX,KAAK,CAACY,MAAM,GAAG,CAAC,gBAAGf,OAAA,CAACF,KAAK;MAACK,KAAK,EAAEA,KAAM;MAACa,QAAQ,EAAEX;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,kBAAkB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAGV;AAACZ,EAAA,CAnBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}