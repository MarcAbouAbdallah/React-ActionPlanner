{"ast":null,"code":"var _jsxFileName = \"/Users/marc/Desktop/Projects/React-ActionPlanner/src/components/AddTask.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTask = ({\n  onAdd\n}) => {\n  _s();\n  // Component level states (not app level state)\n  const [text, setText] = useState('');\n  const [day, setDay] = useState('');\n  const [reminder, setReminder] = useState(false);\n\n  // Submit Function\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!text) {\n      //INput Validation\n      alert('Please Add Task');\n      return;\n    }\n    onAdd({\n      text,\n      day,\n      reminder\n    }); //Call Function\n\n    //Clear Form\n    setText('');\n    setDay('');\n    setReminder(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-form\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Task\",\n        value: text,\n        onChange: e => setText(e.target.value) //onChange (here, when user starts typing)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Day & Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Day & Time\",\n        value: day,\n        onChange: e => setDay(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control form-control-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Set Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: reminder,\n        value: reminder,\n        onChange: e => setReminder(e.currentTarget.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Save Task\",\n      className: \"btn btn-block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(AddTask, \"Aj+4+2kaTLo6CjtAhOIEiZmPaGE=\");\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AddTask","onAdd","_s","text","setText","day","setDay","reminder","setReminder","onSubmit","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","checked","currentTarget","_c","$RefreshReg$"],"sources":["/Users/marc/Desktop/Projects/React-ActionPlanner/src/components/AddTask.js"],"sourcesContent":["import { useState } from \"react\"\n\nconst AddTask = ({ onAdd }) => {\n    \n    // Component level states (not app level state)\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    // Submit Function\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text){ //INput Validation\n            alert('Please Add Task')\n            return\n        }\n\n        onAdd({ text, day, reminder }) //Call Function\n\n        //Clear Form\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input\n                    type='text'\n                    placeholder=\"Add Task\"\n                    value={text}\n                    onChange={(e) => setText(e.target.value)} //onChange (here, when user starts typing)\n                />\n            </div>\n            <div className=\"form-control\">\n                <label>Day & Time</label>\n                <input\n                    type='text'\n                    placeholder=\"Add Day & Time\"\n                    value={day}\n                    onChange={(e) => setDay(e.target.value)} />\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Set Reminder</label>\n                <input \n                    type='checkbox'\n                    checked={reminder}\n                    value={reminder}\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\n                />\n            </div>\n\n            <input type='submit' value='Save Task' className=\"btn btn-block\" />\n\n        </form>\n    )\n}\n\nexport default AddTask\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}