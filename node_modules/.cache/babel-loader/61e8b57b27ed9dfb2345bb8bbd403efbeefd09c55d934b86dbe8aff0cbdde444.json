{"ast":null,"code":"var _jsxFileName = \"/Users/marc/Desktop/Projects/react-task-tracker/src/components/Header.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport { useLocation } from 'react-router-dom'; // Hook to retrieve path location\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  title,\n  onAdd,\n  showAdd\n}) => {\n  _s();\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), location.pathname === '/' && /*#__PURE__*/_jsxDEV(Button, {\n      color: showAdd ? 'red' : 'green' //Dynamic value based on prop\n      ,\n      text: showAdd ? 'Close' : 'Add',\n      onClick: onAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n// Default prop values\n_s(Header, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Header;\nHeader.defaultProps = {\n  title: 'Task Tracker'\n};\n\n// Default prop types\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\n// CSS IN JS (other options care inline styling, using a stylesheet ...)\n// const headingStyle = {\n//color: 'red',\n//backgroundColor: 'black'\n//}\n\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["PropTypes","Button","useLocation","jsxDEV","_jsxDEV","Header","title","onAdd","showAdd","_s","location","className","children","fileName","_jsxFileName","lineNumber","columnNumber","pathname","color","text","onClick","_c","defaultProps","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/marc/Desktop/Projects/react-task-tracker/src/components/Header.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport Button from './Button'\n\nimport { useLocation } from 'react-router-dom' // Hook to retrieve path location\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    const location = useLocation()\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            {location.pathname === '/' && (\n                <Button\n                    color={showAdd ? 'red' : 'green'} //Dynamic value based on prop\n                    text={showAdd ? 'Close' : 'Add'}\n                    onClick={onAdd}\n                />\n            )}\n        </header>\n    )\n}\n\n// Default prop values\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\n// Default prop types\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n\n// CSS IN JS (other options care inline styling, using a stylesheet ...)\n// const headingStyle = {\n//color: 'red',\n//backgroundColor: 'black'\n//}\n\nexport default Header\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,UAAU;AAE7B,SAASC,WAAW,QAAQ,kBAAkB,EAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,oBACIE,OAAA;IAAQO,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACtBR,OAAA;MAAAQ,QAAA,EAAKN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACfN,QAAQ,CAACO,QAAQ,KAAK,GAAG,iBACtBb,OAAA,CAACH,MAAM;MACHiB,KAAK,EAAEV,OAAO,GAAG,KAAK,GAAG,OAAQ,CAAC;MAAA;MAClCW,IAAI,EAAEX,OAAO,GAAG,OAAO,GAAG,KAAM;MAChCY,OAAO,EAAEb;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEjB,CAAC;;AAED;AAAAP,EAAA,CAjBMJ,MAAM;EAAA,QACSH,WAAW;AAAA;AAAAmB,EAAA,GAD1BhB,MAAM;AAkBZA,MAAM,CAACiB,YAAY,GAAG;EAClBhB,KAAK,EAAE;AACX,CAAC;;AAED;AACAD,MAAM,CAACkB,SAAS,GAAG;EACfjB,KAAK,EAAEN,SAAS,CAACwB,MAAM,CAACC;AAC5B,CAAC;;AAGD;AACA;AACA;AACA;AACA;;AAEA,eAAepB,MAAM;AAAA,IAAAgB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}