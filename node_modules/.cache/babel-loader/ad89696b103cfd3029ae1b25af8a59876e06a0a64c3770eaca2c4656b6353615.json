{"ast":null,"code":"var _jsxFileName = \"/Users/marc/Desktop/Projects/react-task-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Header from './components/Header.js';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\n// Root component that contains all other components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // States are stored in the top component (to use them everywhere) and passed to components through props (Can also use other state management tools like Redux, Context API...)\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctors Appointment',\n    day: 'Feb 5th at 2:30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    day: 'Feb 6th at 1:30pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Food Shopping',\n    day: 'Feb 6th at 1:30pm',\n    reminder: false\n  }]);\n\n  // Functions to be passed to other components\n\n  // Toggle Task reminder\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: !task.reminder\n    } : task //Toggle reminder for the task with given id only\n    ));\n  };\n\n  // Add Task \n  const addTask = task => {\n    console.log(task);\n  };\n\n  // Delete Task\n  const deleteTask = id => {\n    //This is how to manipulate states (immutable) by calling set function\n    setTasks(tasks.filter(task => task.id !== id)); //Change the state using filter()\n  };\n\n  // Call all components (Headers, Tasks ...): Can pass states and functions, use conditional logic ...\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) //Pass down states and functions (through props)\n    : 'No tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0npmQHdYL0yUGIp5ufBKt0W1SJ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","Tasks","AddTask","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","id","text","day","reminder","toggleReminder","map","task","addTask","console","log","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onDelete","onToggle","_c","$RefreshReg$"],"sources":["/Users/marc/Desktop/Projects/react-task-tracker/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport Header from './components/Header.js'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n// Root component that contains all other components\nfunction App() {\n\n  // States are stored in the top component (to use them everywhere) and passed to components through props (Can also use other state management tools like Redux, Context API...)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Doctors Appointment',\n      day: 'Feb 5th at 2:30pm',\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: 'Meeting at School',\n      day: 'Feb 6th at 1:30pm',\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: 'Food Shopping',\n      day: 'Feb 6th at 1:30pm',\n      reminder: false,\n    }\n  ])\n\n  // Functions to be passed to other components\n\n  // Toggle Task reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: ! task.reminder}: task //Toggle reminder for the task with given id only\n    )\n  )\n  }\n\n  // Add Task \n  const addTask = (task) => {\n    console.log(task)\n  }\n  \n  // Delete Task\n  const deleteTask = (id) => {\n    //This is how to manipulate states (immutable) by calling set function\n    setTasks(tasks.filter((task) => task.id !== id)) //Change the state using filter()\n  }\n\n  // Call all components (Headers, Tasks ...): Can pass states and functions, use conditional logic ...\n  return (\n    <div className=\"container\">\n      <Header />\n      <AddTask />\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> //Pass down states and functions (through props)\n      ) : (\n          'No tasks to show'\n        )}\n    </div>\n  )\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CACjC;IACEU,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,qBAAqB;IAC3BC,GAAG,EAAE,mBAAmB;IACxBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,mBAAmB;IACzBC,GAAG,EAAE,mBAAmB;IACxBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,eAAe;IACrBC,GAAG,EAAE,mBAAmB;IACxBC,QAAQ,EAAE;EACZ,CAAC,CACF,CAAC;;EAEF;;EAEA;EACA,MAAMC,cAAc,GAAIJ,EAAE,IAAK;IAC7BD,QAAQ,CACND,KAAK,CAACO,GAAG,CAAEC,IAAI,IACbA,IAAI,CAACN,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGM,IAAI;MAAEH,QAAQ,EAAE,CAAEG,IAAI,CAACH;IAAQ,CAAC,GAAEG,IAAI,CAAC;IACjE,CACF,CAAC;EACD,CAAC;;EAED;EACA,MAAMC,OAAO,GAAID,IAAI,IAAK;IACxBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACnB,CAAC;;EAED;EACA,MAAMI,UAAU,GAAIV,EAAE,IAAK;IACzB;IACAD,QAAQ,CAACD,KAAK,CAACa,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC,CAAC,EAAC;EACnD,CAAC;;EAED;EACA,oBACEL,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlB,OAAA,CAACJ,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtB,OAAA,CAACF,OAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACVnB,KAAK,CAACoB,MAAM,GAAG,CAAC,gBACfvB,OAAA,CAACH,KAAK;MAACM,KAAK,EAAEA,KAAM;MAACqB,QAAQ,EAAET,UAAW;MAACU,QAAQ,EAAEhB;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,CAAC;IAAA,EAErE,kBACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGV;AAACpB,EAAA,CA3DQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA6DZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}